# General {{{ 
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# enable mouse mode
set -g mouse on

# Set status bar update frequency
set -g status-interval 1

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set 256color / true color for same colors inside and out of tmux
# set -g default-terminal "tmux-256color"
# Make comptaible with italics
# set -as terminal-overrides ',xterm*:sitm=\E[3m'
# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# dont default to --login shell
set -g default-command "${SHELL}"

# use zsh bindings
set-window-option -g xterm-keys on

# Number sessions from 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Handle window & pane titles
set  -g renumber-windows on
setw -g automatic-rename on
set-option -g set-titles on
set-option -g allow-rename off

setw -g mode-keys vi

# Increase buffer size
set-option -g history-limit 100000

set -g focus-events on

# set -ga terminal-overrides ',*:Tc' # this is for 256 color
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape

# Activity monitoring
setw -g monitor-activity off
set -g visual-activity off

# Visual silence
set -g visual-bell off
set -g visual-silence on

# }}}
# Bindings {{{
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.tmux.conf sourced'

# kill stuff
bind q confirm-before kill-session
unbind x
unbind c
bind c confirm kill-pane

# consistent scroll controls
# bind-key -t vi-copy -n S-PPage halfpage-up
# bind-key -t vi-copy -n S-NPage halfpage-down

# scroll with alacritty
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n Pageup if-shell "$is_vim" "send-keys Pageup" "copy-mode -u"
bind -n S-Pageup if-shell "$is_vim" "send-keys Pageup" "copy-mode -u"
bind -n S-Pagedown send-keys Pagedown

# bind -n C-Pageup copy-mode \; send -X scroll-up
# bind -n C-Pagedown copy-mode \; send -X scroll-down
# bind-key -t vi-copy C-Pageup page-
# bind-key -t vi-copy C-Pagedown page-up


unbind '$'
bind . command-prompt "rename-session '%%'"


# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# --------------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
# --------------------------------------------------------------------
# -- Superceded by tmux-thumbs
# Toggle copy mode
# bind c copy-mode
# Paste to buffer
bind p paste-buffer
# Vim copy mode mappings
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy -se c -i'
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy -se c -i'
# unbind -T copy-mode-vi Enter

# Resize panes
bind -r H resize-pane -L 4
bind -r L resize-pane -R 4
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4

# Move window order with Ctrl-Shift-Left/Right
bind-key C-S-Left swap-window -t -1
bind-key C-S-Right swap-window -t +1

# Open new window in current directory
bind-key N new-window -ac "#{pane_current_path}" \; command-prompt -p "Name for this new window:" "rename-window '%%'"
bind-key n new-window

bind-key b last-window
bind-key BSpace last-window
bind-key Space switch-client -l

# Toggle statusbar
bind-key z set-option status

# Same thing for verical layouts
bind m run-shell "~/.config/tmux/scripts/resize-adaptable.sh -l main-vertical -p 66"
bind l run-shell "~/.config/tmux/scripts/resize-adaptable.sh -l main-vertical -p 82"
# set to main-horizontal, 66% height for main pane
bind M run-shell "~/.config/tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"

# }}}
# Plugins {{{
# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux environments across restarts
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
# Doesnt work in kitty yet
# set -g @plugin 'fcsonline/tmux-thumbs' # yank useful matched patterns (urls, colors) with prefix+space
# TODO: https://github.com/jabirali/tmux-tilish replaces vim tmux navigator
# set -g @plugin 'akohlbecker/aw-watcher-tmux'

# }}}
# Visual {{{
# Panes
set -g pane-border-style fg=colour238
# set -g pane-border-style fg='colour8'
# set -g pane-active-border-style fg=colour237
set -g pane-active-border-style fg='colour4'
set -g message-style bg=default,fg='colour4'

# ensure tmux is transparent
set-option -g window-active-style bg=default
set-option -g window-style bg=default
set-option -g status-style bg=default

# # Status bar v5 {{{
set -g status-position top
set -g status-justify 'left'
set -g status-left-length 80
set -g status-right-length 80
setw -g window-status-separator ' '
set -g status-left ' '
set -g status-right '#(~/.config/suckless/bar/bar-functions/dwm_pomo.sh)#[fg=colour246,bg=colour234] #(~/.config/tmux/scripts/uptime.sh) #[fg=colour244,bg=colour235] %-I:%M:%S %p #[fg=colour12,bg=colour236] #H #[fg=colour3,bold,bg=colour7,bold] #S '
# setw -g window-status-format "#[fg=colour241]#I: #[fg=colour241,noitalics]#W "
setw -g window-status-format "#[fg=colour244,bg=colour236] #I #[fg=colour5,nobold,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour6,bold,bg=colour236] #I #[bg=colour16,bold,fg=colour5] #W #[bold]<#[nobold] "
#}}}

# Plugin settings
# set -g @continuum-restore 'on' # enable tmux env restoration

# CPU
# set -g @cpu_low_icon "-" # icon when cpu is low
# set -g @cpu_medium_icon "o" # icon when cpu is medium
# set -g @cpu_high_icon "0" # icon when cpu is high
# set -g @ram_low_icon "-" # icon when cpu is low
# set -g @ram_medium_icon "o" # icon when cpu is medium
# set -g @ram_high_icon "0" # icon when cpu is high

# Wal
# set -g @cpu_low_fg_color "#[fg=colour8]" # background color when cpu is low
# set -g @cpu_medium_fg_color "#[fg=colour1]" # background color when cpu is medium
# set -g @cpu_high_fg_color "#[fg=colour4]" # background color when cpu is high
# Gruvbox
# set -g @ram_low_fg_color "#[fg=colour142]" # background color when cpu is low
# set -g @ram_medium_fg_color "#[fg=colour214]" # background color when cpu is medium
# set -g @ram_high_fg_color "#[fg=colour124]" # background color when cpu is high
# set -g @cpu_low_fg_color "#[fg=colour142]" # background color when cpu is low
# set -g @cpu_medium_fg_color "#[fg=colour214]" # background color when cpu is medium
# set -g @cpu_high_fg_color "#[fg=colour124]" # background color when cpu is high
#
# init plugins
# run '~/.config/tmux/plugins/tpm/tpm'
