# source: https://stackoverflow.com/a/68987551
# user-specific terminal emulator keybindings
# defaults ---
# CTRL_U='^U'
# CMD_A=$'\eå'
# CMD_C=$'\eç'
# CMD_V=$'\e√'
# CMD_X=$'\e≈'
# CMD_Z=$'\eΩ'
# CMD_SHIFT_Z=$'\e¸'
# CMD_LEFT=$'\x01' # ^A
# CMD_RIGHT=$'\x05' # ^B
# CMD_SHIFT_LEFT=$'\ea'
# CMD_SHIFT_RIGHT=$'\ee'
# CTRL_SHIFT_A=$'\ea'
# CTRL_SHIFT_E=$'\ee'
# ----------------

CTRL_U='^U'
CMD_A=$'[97;9u'
CMD_C=$'\eç'
CMD_V=$'\e[120;9u'
CMD_X=$'[120;9u'
CMD_Z=$'[122;9u'
CMD_SHIFT_Z=$'[122;10u'
CMD_LEFT=$'\e[1;9D'
CMD_RIGHT=$'\e[1;9C'
CMD_SHIFT_LEFT=$'\e[1;10D'
CMD_SHIFT_RIGHT=$'\e[1;10C'
CTRL_SHIFT_A=$'\e[97;10u'
CTRL_SHIFT_E=$'[101;10u'

#        shell-key     widget
bindkey  $CTRL_U       backward-kill-line
bindkey  $CMD_Z        undo
bindkey  $CMD_SHIFT_Z  redo

# `pbpaste` and `pbcopy` are MacOS specific
# clipboard handler commands, for Linux I think
# it's `xclip`
if [[ `uname -s` = Darwin ]];
then
    # copy entire terminal line to clipboard
    # function widget::copy-line() {
    #     printf "%s" "$BUFFER" | pbcopy
    # }
    # zle -N widget::copy-line
    # bindkey $CMD_A widget::copy-line

    # copy selected terminal text to clipboard
    function widget::copy-selection {
        if ((REGION_ACTIVE)); then
            zle copy-region-as-kill
            printf "%s" $CUTBUFFER | pbcopy
        fi
    }
    zle -N widget::copy-selection
    bindkey $CMD_C widget::copy-selection

    # cut selected terminal text to clipboard
    function widget::cut-selection() {
        if ((REGION_ACTIVE)) then
            zle kill-region
            printf "%s" $CUTBUFFER | pbcopy
        fi
    }
    zle -N widget::cut-selection
    bindkey $CMD_X widget::cut-selection

    # paste clipboard contents
    function widget::paste() {
        ((REGION_ACTIVE)) && zle kill-region
        RBUFFER="$(pbpaste)${RBUFFER}"
        CURSOR=$(( CURSOR + $(echo -n $(pbpaste) | wc -c | bc) ))
    }
    zle -N widget::paste
    bindkey $CMD_V widget::paste
fi

function widget::select-all() {
    local totalbufchars=$(echo -n $BUFFER | wc -m | bc)
    CURSOR=0
    zle set-mark-command
    while [[ $CURSOR != $totalbufchars ]]; do
        zle end-of-line
    done
}
zle -N widget::select-all
bindkey $CMD_A widget::select-all

function widget::util-select() {
    ((REGION_ACTIVE)) || zle set-mark-command
    local widget_name=$1
    shift
    zle $widget_name -- $@
}

function widget::util-unselect() {
    REGION_ACTIVE=0
    local widget_name=$1
    shift
    zle $widget_name -- $@
}

function widget::util-delselect() {
    if ((REGION_ACTIVE)) then
        zle kill-region
    else
        local widget_name=$1
        shift
        zle $widget_name -- $@
    fi
}

function widget::util-insertchar() {
    ((REGION_ACTIVE)) && zle kill-region
    RBUFFER="${1}${RBUFFER}"
    zle forward-char
}

for keyname           kcap   seq               mode        widget (
    left              kcub1  $'\eOD'           unselect    backward-char
    right             kcuf1  $'\eOC'           unselect    forward-char
    shift-left        kLFT   $'\e[1;2D'        select      backward-char
    shift-right       kRIT   $'\e[1;2C'        select      forward-char
    shift-up          kri    $'\e[1;2A'        select      up-line-or-history
    shift-down        kind   $'\e[1;2B'        select      down-line-or-history

    alt-left          x      $'\e[1;3D'        unselect    backward-word
    alt-right         x      $'\e[1;3C'        unselect    forward-word
    alt-shift-left    x      $'\e[1;4D'       select      backward-word
    alt-shift-right   x      $'\e[1;4C'       select      forward-word

    cmd-left          x      $CMD_LEFT         unselect    backward-word
    cmd-right         x      $CMD_RIGHT        unselect    forward-word
    cmd-shift-left    x      $CMD_SHIFT_LEFT   select      backward-word
    cmd-shift-right   x      $CMD_SHIFT_RIGHT  select      forward-word

    ctrl-a            x      '^A'              unselect    beginning-of-line
    ctrl-e            x      '^E'              unselect    end-of-line
    ctrl-shift-a      x      $CTRL_SHIFT_A     select      beginning-of-line
    ctrl-shift-e      x      $CTRL_SHIFT_E     select      end-of-line
    ctrl-shift-left   x      $'\e[1;6D'        select      beginning-of-line
    ctrl-shift-right  x      $'\e[1;6C'        select      end-of-line

    esc               x      $'\e'             unselect    reset-prompt
    del               x      $'^D'             delselect   delete-char
    backspace         x      $'^?'             delselect   backward-delete-char
) {
    eval "
        function widget::key-$keyname() {
            widget::util-$mode $widget \$@
        }
    "
    zle -N widget::key-$keyname
    bindkey ${terminfo[$kcap]:-$seq} widget::key-$keyname
}
